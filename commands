#!/bin/bash

if [ -f /etc/default/octohost ]; then
        . /etc/default/octohost
fi

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

. $DIR/env

create_mysql_user ()
{
  # TODO: Check if user exists.
  SQL="CREATE USER '$1'@'%' IDENTIFIED BY '$2';"
  mysql -u$ADMIN_MYSQL_USER -p$ADMIN_MYSQL_PASSWORD -h$MYSQL_HOSTNAME -e "$SQL"
}

create_mysql_password ()
{
  cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
}

reload_mysql_tables ()
{
  echo $FUNCNAME
}

create_mysql_database ()
{
  # TODO: Check if DB exists.
  SQL="CREATE DATABASE $1"
  mysql -u$ADMIN_MYSQL_USER -p$ADMIN_MYSQL_PASSWORD -h$MYSQL_HOSTNAME -e "$SQL"
}

give_mysql_access ()
{
  echo $FUNCNAME
}

reload_mysql_tables ()
{
  echo $FUNCNAME
}

link_environment_variables ()
{
  echo $FUNCNAME
}

show_environment_variables ()
{
  echo $FUNCNAME
}

config_check () {
  if [ -z "$MYSQL_HOSTNAME" ]; then
    echo "MYSQL_HOSTNAME needs to be set in $DIR/env."
    exit 1
  fi
}

case "$1" in

  mysql:create)
  config_check
  if [ $2 ]; then
    echo "Creating database for '$2' container."
    PASSWORD=$(create_mysql_password)
    create_mysql_user "$2" "$PASSWORD"
    create_mysql_database "$2"
    give_mysql_access
    reload_mysql_tables
    link_environment_variables
    show_environment_variables
    echo "octo reload $2"
  else
    echo "Usage: octo mysql create {container}"
  fi
  ;;

  mysql:delete)
  config_check
  ;;

  help)
  cat<<EOF

  octo mysql:create {container}
  octo mysql:delete {container}
EOF
  ;;

  *)
  ;;
esac
